

```
// @practice
def module aim_at_nearest_player
def desc "Aims towards the nearest player."

on tick if playing {
    if entity_in_range :player 5 {
        turn_to nearest_entity :player
    }
}
```

```
// @itzispyder
def module flight
def desc "Fake flight from walmart"

on tick {
    if input_active jump {
        velocity ~ 0.5 ~
    }
    if input_active sneak {
        velocity ~ -0.5 ~
    }

    if input_active forward {
        velocity ^ ^ ^0.2
    }
    if input_active backward {
        velocity ^ ^ ^-0.2
    }
    if input_active strafe_left {
        velocity ^-0.2 ^ ^
    }
    if input_active strafe_right {
        velocity ^0.2 ^ ^
    }
}
```

```
// @itzispyder
def module dual-boost
def desc "Left CTRL to boost forward, Right CTRL to backwards"

on key_press left_control if playing {
    velocity ^ ^ ^3
}

on key_press right_control if playing {
    velocity ^ ^ ^-3
}
```

```
// @itzispyder
def module air-jump
def desc "Allows you to jump while being in the air. You can edit the 0.5 to a higher value for higher jumps."

on key_press space if playing {
   velocity ~ 0.5 ~
}
```
```
//@i-no-one
def module mace-hacks
def desc "no fall maybe be needed"

on tick {
    if holding #mace {
        velocity ~ -0.5 ~
        on key_press j {
            velocity ~ 2 ~
        }
    }
}
on tick if playing if target_entity :player,:armor_stand !if blocking if holding #mace {
   if attack_progress >=0.9 if chance_of 75 {      
      input left
   }
}
```